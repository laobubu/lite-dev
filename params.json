{
  "name": "LITE-DEV",
  "tagline": "Lightweight development server and compiler.",
  "body": "# lite-dev\r\n\r\nLightweight development server and compiler (Sass, TypeScript).\r\n\r\nThis will be your good friend when you just want to build a simple website, but not willing to see Makefile, Gulpfile or any redundant blahblah scripts.\r\n\r\n## How to use\r\n\r\n1. Install `npm install -g lite-dev`\r\n2. Open your Terminal on your web directory `cd /works/foo-website/` \r\n3. Run `lite-dev`\r\n\r\n## Game Rule\r\n\r\n### Directory Structure\r\n\r\nJust write your code right here right now! No more source directory or destination directory!\r\n\r\nFor example:\r\n\r\n - index.html\r\n - about.html\r\n - scss\r\n   - style.scss\r\n   - _misc\r\n     - variable.scss\r\n     - mixin.scss\r\n - css\r\n   - (empty directory)\r\n - js\r\n   - jQuery.js\r\n   - index.js\r\n\r\n### SASS or SCSS\r\n\r\nFirst of all, if you don't have a sass compiler, install one:\r\n\r\n- For most computers, `npm install -g node-sass`\r\n- For some moribund outdated computers, `npm install -g sass.js`\r\n\r\nAnd here we go.\r\n   \r\n1. Create a source directory named as `scss` or `sass`.\r\n2. Create a destination directory named as `css`, `style` or `stylesheet`.\r\n3. Compose your scss files.\r\n4. Run `lite-dev`, and your scss files will be compiled and watched.\r\n\r\n### TypeScript\r\n\r\nFirst of all, if you don't have a TypeScript compiler, install one with `npm install -g typescript`\r\n\r\n0. (Optional) Create your `tsconfig.json` file.\r\n1. Create a source directory named as `typescript` or `ts`.\r\n2. Create a destination directory named as `javascript`, `js` or `script`.\r\n3. Compose your TypeScript files.\r\n4. Run `lite-dev`, and your TypeScript files will be compiled and watched.\r\n\r\nNotice: ts files under subdirectories will be ignored unless you have your own `tsconfig.json`\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}